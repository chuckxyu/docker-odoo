#!/bin/sh

# This program patches the configuration for Odoo and then runs the server

# Set some running config options
if [ -f /etc/skel/initrc ]
then 
. /etc/skel/initrc
fi
if [ -f ~/.bashrc ]
then
. ~/.bashrc
fi

conf=/etc/odoo/openerp-server.conf
odoo="cd /opt/odoo;$ODOO_SERVER --config $conf"

# Ensure proper content for $UNACCENT
if [ "$UNACCENT" != "False" ]; then
    UNACCENT=True
fi

if [ ! -f /etc/odoo/openerp-server.conf ]
then
echo Patching configuration > /dev/stderr


addons=$(ls -1bd /usr/local/lib/python2.7/dist-packages/openerp/addons \
                 /etc/odoo/addons /etc/odoo/src/* /mnt/extra-addons/* \
                 /var/lib/odoo/Odoo/addons/8.0 /opt/odoo/openerp/addons \
                 /opt/odoo/addons | tr '\n' ',' | sed s/,$//)

echo "
[options]
; Configuration file generated by $(readlink --canonicalize $0)
; Database for domain gestion.oondeo.es is gestion-oondeo-es
xmlrpc_port = 8069
longpolling_port = 8072
dbfilter= ^%h$ 
proxy_mode = true
workers=${ODOO_WORKERS:=6}
limit_time_real = 3600
limit_time_cpu = 3600
addons_path = " $addons "
unaccent = $UNACCENT
;log_level = debug_sql ['debug_rpc_answer', 'debug_rpc', 'debug', 'debug_sql', 'info', 'warn', 'error', 'critical']
log_level = warn
log_handler = werkzeug:CRITICAL,openerp.netsvc.rpc.response:CRITICAL

db_host = ${POSTGRES_HOST:=postgres}
db_port = ${POSTGRES_PORT:=5432}
db_user = ${POSTGRES_USER:=postgres}
db_password = ${POSTGRES_PASSWORD:=postgres}
admin_passwd = ${ADMIN_PASSWORD:=admin}" > $conf

# If database is available, use it
if [ "$DATABASE" != "" ]; then
    echo "database = $DATABASE" >> $conf
fi

fi

#prevent running problems as user odoo
for adir in $addons
do
  cd $adir
  python -m compileall .
done

# Run server
echo Executing \'$odoo\' > /dev/stderr
su odoo --command "$odoo"
